name: Daily Market Data Pipeline

on:
  schedule:
    # KST 기준: 07:05, 15:40, 20:00
    # UTC 기준: 22:05 (전날), 06:40, 11:00
    - cron: '5 22 * * *'  # 07:05 KST (22:05 UTC)
    - cron: '40 6 * * *'  # 15:40 KST (06:40 UTC)
    - cron: '0 11 * * *'  # 20:00 KST (11:00 UTC)
  workflow_dispatch:
    inputs:
      session_type:
        description: '실행할 세션 타입'
        required: true
        default: 'morning'
        type: choice
        options:
        - morning
        - afternoon
        - evening

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fonts-noto-cjk
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create data directory
      run: |
        mkdir -p data/$(date +%Y-%m-%d)
        mkdir -p logs
        
    - name: Set up environment variables
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "NEWS_API_KEY=${{ secrets.NEWS_API_KEY }}" >> $GITHUB_ENV
        echo "REDDIT_CLIENT_ID=${{ secrets.REDDIT_CLIENT_ID }}" >> $GITHUB_ENV
        echo "REDDIT_CLIENT_SECRET=${{ secrets.REDDIT_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "REDDIT_USER_AGENT=${{ secrets.REDDIT_USER_AGENT }}" >> $GITHUB_ENV
        echo "BUFFER_ACCESS_TOKEN=${{ secrets.BUFFER_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "BUFFER_PROFILE_ID=${{ secrets.BUFFER_PROFILE_ID }}" >> $GITHUB_ENV
        echo "FRED_API_KEY=${{ secrets.FRED_API_KEY }}" >> $GITHUB_ENV
        echo "THREADS_USERNAME=${{ secrets.THREADS_USERNAME }}" >> $GITHUB_ENV
        echo "THREADS_PASSWORD=${{ secrets.THREADS_PASSWORD }}" >> $GITHUB_ENV
        echo "USE_THREADS_API=${{ secrets.USE_THREADS_API }}" >> $GITHUB_ENV
        echo "FACEBOOK_ACCESS_TOKEN=${{ secrets.FACEBOOK_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "IG_USER_ID=${{ secrets.IG_USER_ID }}" >> $GITHUB_ENV
        echo "USE_THREADS_AUTO=${{ secrets.USE_THREADS_AUTO }}" >> $GITHUB_ENV
        echo "TIMEZONE=Asia/Seoul" >> $GITHUB_ENV
        echo "DRY_RUN=false" >> $GITHUB_ENV
        echo "DATA_DIR=data" >> $GITHUB_ENV
        echo "PREVIEW_DIR=preview" >> $GITHUB_ENV
        
    - name: Determine session type
      id: session
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "session_type=${{ github.event.inputs.session_type }}" >> $GITHUB_OUTPUT
        else
          # 스케줄에 따른 세션 타입 결정
          current_hour=$(date -u +%H)
          if [ "$current_hour" = "22" ]; then
            echo "session_type=morning" >> $GITHUB_OUTPUT
          elif [ "$current_hour" = "06" ]; then
            echo "session_type=afternoon" >> $GITHUB_OUTPUT
          elif [ "$current_hour" = "11" ]; then
            echo "session_type=evening" >> $GITHUB_OUTPUT
          fi
        fi
        
    - name: Run pipeline
      run: |
        echo "Running ${{ steps.session.outputs.session_type }} pipeline..."
        python scripts/github_scheduler.py ${{ steps.session.outputs.session_type }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pipeline-output-${{ steps.session.outputs.session_type }}-${{ github.run_id }}
        path: |
          data/
          logs/
        retention-days: 7
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ Pipeline failed for session: ${{ steps.session.outputs.session_type }}"
        echo "Check the logs for more details" 